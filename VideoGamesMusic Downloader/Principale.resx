<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="TimerVelocità.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>