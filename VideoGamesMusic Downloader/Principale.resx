<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        omTChP8DtZrX5cOSGgEAAAAASUVORK5CYII=
</value>
  </data>
</root>